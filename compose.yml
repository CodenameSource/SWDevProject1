version: "2.1"

services:
  webapp: # Microservice 1
    image: swdev-project1-webapp
    build:
        context: webapp
        dockerfile: Dockerfile
        tags:
            - "swdev-project1-webapp:latest"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
      price-checker:
        condition: service_started
    environment:
      MYSQL_USER: root
      MYSQL_PASS: password
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DB: swdev1
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
  price-checker: # Microservice 2
    image: swdev-project1-price-checker
    build:
        context: check-price
        dockerfile: Dockerfile
        tags:
            - "swdev-project1-price-checker:latest"
    container_name: price-checker
    depends_on:
      kafka:
        condition: service_started
    restart: unless-stopped
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
  db:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306"
    command: --init-file /data/application/init.sql
    volumes:
      - ./init.sql:/data/application/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: password
    hostname: mysql
    healthcheck:

      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 5s
      retries: 10
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    depends_on:
      - zookeeper
